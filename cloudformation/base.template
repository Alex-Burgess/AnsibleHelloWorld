{
   "AWSTemplateFormatVersion": "2010-09-09",
   "Description": "Creates the full stack for the Ansible POC demonstration",
   "Parameters": {
      "VpcCidrBlock": {
         "Type": "String",
         "AllowedPattern": "((\\d{1,3})\\.){3}\\d{1,3}/\\d{1,2}",
         "Default": "10.0.0.0/16",
         "Description": "VPC CIDR Block (eg 10.0.0.0/16)"
      },
      "InstanceTypeParameter" : {
        "Type" : "String",
        "Default" : "t3.nano",
        "AllowedValues" : ["t3.nano", "t3.micro", "t3.small", "t2.nano", "t2.micro", "t2.small"],
        "Description" : "Enter t3.nano, t3.micro, t3.small, t2.nano, t2.micro, or t2.small. Default is t3.nano."
      },
      "ImageID": {
         "Type" : "AWS::EC2::Image::Id",
         "Description" : "Enter AMI for instance",
         "Default": "ami-0eafb5ee12a2cbffc"
      },
      "SpotPrice" : {
         "Type" : "String",
         "Default" : "0.0057",
         "Description" : "Enter a spot price for the instances. Default is 0.0057 which is the on demand price for t3.nano."
      },
      "PurchaseOption": {
        "Type" : "String",
        "Description" : "Choose one of OnDemand or Spot",
        "AllowedValues" : ["OnDemand", "Spot"],
        "Default" : "OnDemand"
      },
      "InstanceKeyName" : {
         "Type" : "String",
         "Description" : "Enter the name for the key used to ssh to ec2 instances."
      },
      "BuildProdController": {
         "AllowedValues": [
            "true",
            "false"
         ],
         "Default": "false",
         "Description": "To build the production environment, set this parameter to true",
         "Type": "String"
      },
      "BuildStagingController": {
         "AllowedValues": [
            "true",
            "false"
         ],
         "Default": "false",
         "Description": "To build the staging environment, set this parameter to true",
         "Type": "String"
      },
      "BuildTestController": {
         "AllowedValues": [
            "true",
            "false"
         ],
         "Default": "true",
         "Description": "To build the test environment, set this parameter to true",
         "Type": "String"
      },
      "ProdAnsibleControllerDesiredCapacity" : {
        "Type" : "String",
        "Default" : "2",
        "Description" : "Enter the number of ansible controller instances required. Note - BuildProdController must be set to true as well."
      },
      "StagingAnsibleControllerDesiredCapacity" : {
        "Type" : "String",
        "Default" : "2",
        "Description" : "Enter the number of ansible controller instances required. Note - BuildStagingController must be set to true as well."
      },
      "TestAnsibleControllerDesiredCapacity" : {
        "Type" : "String",
        "Default" : "1",
        "Description" : "Enter the number of ansible controller instances required."
      }
   },
   "Conditions" : {
      "CreateProdResources" : {"Fn::Equals" : [{"Ref" : "BuildProdController"}, "true"]},
      "CreateStagingResources" : {"Fn::Equals" : [{"Ref" : "BuildStagingController"}, "true"]},
      "CreateTestResources" : {"Fn::Equals" : [{"Ref" : "BuildTestController"}, "true"]}
   },
   "Resources": {
      "VPCStack": {
         "Type": "AWS::CloudFormation::Stack",
         "Properties": {
            "Parameters": {
               "TagName": { "Ref": "AWS::StackName" },
               "VpcCidrBlock": { "Ref": "VpcCidrBlock"}
            },
            "TemplateURL": "https://s3.amazonaws.com/ansible-hello-world/cloudformation/vpc.template",
            "TimeoutInMinutes": 5
         }
      },
      "SGStack": {
         "Type": "AWS::CloudFormation::Stack",
         "Properties": {
            "Parameters": {
               "TagName": { "Ref" : "AWS::StackName" },
               "VpcID": { "Fn::GetAtt" : ["VPCStack", "Outputs.VpcId"] }
            },
            "TemplateURL": "https://s3.amazonaws.com/ansible-hello-world/cloudformation/security-groups.template",
            "TimeoutInMinutes": 5
         }
      },
      "IAMStack": {
         "Type": "AWS::CloudFormation::Stack",
         "Properties": {
            "Parameters": {
              "MainStackName" : { "Ref" : "AWS::StackName" }
            },
            "TemplateURL": "https://s3.amazonaws.com/ansible-hello-world/cloudformation/iam.template",
            "TimeoutInMinutes": 5
         }
      },
      "ProdAnsibleStack": {
         "Type": "AWS::CloudFormation::Stack",
         "Condition" : "CreateProdResources",
         "Properties": {
            "TemplateURL": "https://s3.amazonaws.com/ansible-hello-world/cloudformation/ansible.template",
            "TimeoutInMinutes": 5,
            "Parameters": {
               "AppName": { "Ref" : "AWS::StackName" },
               "Environment": "prod",
               "InstanceKeyName" : { "Ref" : "InstanceKeyName"},
               "SubnetIDs": { "Fn::GetAtt" : ["VPCStack", "Outputs.SubnetIds"] },
               "SecurityGroupIDs": { "Fn::Join" : [",", [
                  {"Fn::GetAtt" : ["SGStack", "Outputs.BaseSG"]},
                  {"Fn::GetAtt" : ["SGStack", "Outputs.WebserverHttpSG"]}
               ]]},
               "InstanceTypeParameter": { "Ref": "InstanceTypeParameter"},
               "ImageID": { "Ref" : "ImageID"},
               "InstanceProfileName": { "Fn::GetAtt" : ["IAMStack", "Outputs.AnsibleHelloworldInstanceProfileName"] },
               "SpotPrice" : { "Ref" : "SpotPrice" },
               "PurchaseOption" : { "Ref" : "PurchaseOption" },
               "AnsibleControllerDesiredCapacity" : { "Ref" : "ProdAnsibleControllerDesiredCapacity" },
            }
         }
      },
      "StagingAnsibleStack": {
         "Type": "AWS::CloudFormation::Stack",
         "Condition" : "CreateStagingResources",
         "Properties": {
            "TemplateURL": "https://s3.amazonaws.com/ansible-hello-world/cloudformation/ansible.template",
            "TimeoutInMinutes": 5,
            "Parameters": {
               "AppName": { "Ref" : "AWS::StackName" },
               "Environment": "staging",
               "InstanceKeyName" : { "Ref" : "InstanceKeyName"},
               "SubnetIDs": { "Fn::GetAtt" : ["VPCStack", "Outputs.SubnetIds"] },
               "SecurityGroupIDs": { "Fn::Join" : [",", [
                  {"Fn::GetAtt" : ["SGStack", "Outputs.BaseSG"]},
                  {"Fn::GetAtt" : ["SGStack", "Outputs.WebserverHttpSG"]}
               ]]},
               "InstanceTypeParameter": { "Ref": "InstanceTypeParameter"},
               "ImageID": { "Ref" : "ImageID"},
               "InstanceProfileName": { "Fn::GetAtt" : ["IAMStack", "Outputs.AnsibleHelloworldInstanceProfileName"] },
               "SpotPrice" : { "Ref" : "SpotPrice" },
               "PurchaseOption" : { "Ref" : "PurchaseOption" },
               "AnsibleControllerDesiredCapacity" : { "Ref" : "StagingAnsibleControllerDesiredCapacity" },
            }
         }
      },
      "TestAnsibleStack": {
         "Type": "AWS::CloudFormation::Stack",
         "Condition" : "CreateTestResources",
         "Properties": {
            "TemplateURL": "https://s3.amazonaws.com/ansible-hello-world/cloudformation/ansible.template",
            "TimeoutInMinutes": 5,
            "Parameters": {
               "AppName": { "Ref" : "AWS::StackName" },
               "Environment": "test",
               "InstanceKeyName" : { "Ref" : "InstanceKeyName"},
               "SubnetIDs": { "Fn::GetAtt" : ["VPCStack", "Outputs.SubnetIds"] },
               "SecurityGroupIDs": { "Fn::Join" : [",", [
                  {"Fn::GetAtt" : ["SGStack", "Outputs.BaseSG"]},
                  {"Fn::GetAtt" : ["SGStack", "Outputs.WebserverHttpSG"]}
               ]]},
               "InstanceTypeParameter": { "Ref": "InstanceTypeParameter"},
               "ImageID": { "Ref" : "ImageID"},
               "InstanceProfileName": { "Fn::GetAtt" : ["IAMStack", "Outputs.AnsibleInstanceProfileName"] },
               "SpotPrice" : { "Ref" : "SpotPrice" },
               "PurchaseOption" : { "Ref" : "PurchaseOption" },
               "AnsibleControllerDesiredCapacity" : { "Ref" : "TestAnsibleControllerDesiredCapacity" },
            }
         }
      }
   },
   "Outputs" : {
      "VpcId" : {
         "Description" : "VPC ID",
         "Value": { "Fn::GetAtt" : ["VPCStack", "Outputs.VpcId"]},
         "Export": { "Name" : {"Fn::Sub": "${AWS::StackName}-VpcID" }}
      },
      "SubnetIDs" : {
        "Description" : "Subnet IDs",
        "Value": { "Fn::GetAtt" : ["VPCStack", "Outputs.SubnetIds"] },
        "Export": { "Name" : {"Fn::Sub": "${AWS::StackName}-SubnetIDs" }}
      },
      "SecurityGroupIDs" : {
        "Description" : "Security Group IDs",
        "Value" : { "Fn::Join" : [",", [
           {"Fn::GetAtt" : ["SGStack", "Outputs.BaseSG"]},
           {"Fn::GetAtt" : ["SGStack", "Outputs.WebserverHttpSG"]}
        ]]},
        "Export": { "Name" : {"Fn::Sub": "${AWS::StackName}-SecurityGroupIDs" }}
      },
      "LoadBalancerSecurityGroupID" : {
        "Description" : "Load Balancer Security Group ID",
        "Value": {"Fn::GetAtt" : ["SGStack", "Outputs.WebserverHttpSG"]},
        "Export": { "Name" : {"Fn::Sub": "${AWS::StackName}-LoadBalancerSecurityGroupID" }}
      },
      "IamInstanceProfileName" : {
        "Description" : "IAM Instance Profile Name",
        "Value": { "Fn::GetAtt" : ["IAMStack", "Outputs.AnsibleInstanceProfileName"] },
        "Export": { "Name" : {"Fn::Sub": "${AWS::StackName}-IamInstanceProfileName" }}
      }
   }
}
