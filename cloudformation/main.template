{
   "AWSTemplateFormatVersion": "2010-09-09",
   "Description": "Creates the full stack for the Ansible POC demonstration",
   "Parameters": {
      "AppName" : {
          "Type" : "String",
          "Description" : "Enter the name for the application",
          "MinLength": 1,
          "MaxLength": 64,
          "AllowedPattern": "[a-zA-Z][a-zA-Z0-9-]*",
          "ConstraintDescription": "AppName must begin with a letter and contain alphanumeric characters, or a hyphen."
      },
      "VpcCidrBlock": {
         "Type": "String",
         "AllowedPattern": "((\\d{1,3})\\.){3}\\d{1,3}/\\d{1,2}",
         "Default": "10.0.0.0/16",
         "Description": "VPC CIDR Block (eg 10.0.0.0/16)"
      },
      "InstanceTypeParameter" : {
        "Type" : "String",
        "Default" : "t3.nano",
        "AllowedValues" : ["t3.nano", "t3.micro", "t3.small", "t2.nano", "t2.micro", "t2.small"],
        "Description" : "Enter t3.nano, t3.micro, t3.small, t2.nano, t2.micro, or t2.small. Default is t3.nano."
      },
      "ControllerImageID": {
         "Type" : "AWS::EC2::Image::Id",
         "Description" : "Enter AMI for instance"
      },
      "WebserverImageID": {
         "Type" : "AWS::EC2::Image::Id",
         "Description" : "Enter AMI for instance"
      }
   },
   "Resources": {
      "VPCStack": {
         "Type": "AWS::CloudFormation::Stack",
         "Properties": {
            "Parameters": {
               "AppName": { "Ref": "AppName" },
               "VpcCidrBlock": { "Ref": "VpcCidrBlock"}
            },
            "TemplateURL": "https://s3.amazonaws.com/alex-demo-files/cf-templates/ansible-hello-world/vpc.template",
            "TimeoutInMinutes": 5
         }
      },
      "SGStack": {
         "Type": "AWS::CloudFormation::Stack",
         "Properties": {
            "Parameters": {
               "AppName": { "Ref": "AppName" },
               "VpcID": { "Fn::GetAtt" : ["VPCStack", "Outputs.VpcId"] }
            },
            "TemplateURL": "https://s3.amazonaws.com/alex-demo-files/cf-templates/ansible-hello-world/security-groups.template",
            "TimeoutInMinutes": 5
         }
      },
      "ProdAnsibleControllerStack": {
         "Type": "AWS::CloudFormation::Stack",
         "Properties": {
            "TemplateURL": "https://s3.amazonaws.com/alex-demo-files/cf-templates/ansible-hello-world/ansible_controllers.template",
            "TimeoutInMinutes": 5,
            "Parameters": {
               "AppName": { "Ref": "AppName" },
               "Environment": "prod",
               "SubnetIDs": { "Fn::GetAtt" : ["VPCStack", "Outputs.SubnetIds"] },
               "SecurityGroupIDs": { "Fn::GetAtt" : ["SGStack", "Outputs.BaseSG"] },
               "InstanceTypeParameter": { "Ref": "InstanceTypeParameter"},
               "ImageID": { "Ref" : "ControllerImageID"}
            }
         }
      },
      "ProdWebserverStack": {
         "Type": "AWS::CloudFormation::Stack",
         "Properties": {
            "TemplateURL": "https://s3.amazonaws.com/alex-demo-files/cf-templates/ansible-hello-world/webservers.template",
            "TimeoutInMinutes": 5,
            "Parameters": {
               "AppName": { "Ref": "AppName" },
               "Environment": "prod",
               "SubnetIDs": { "Fn::GetAtt" : ["VPCStack", "Outputs.SubnetIds"] },
               "SecurityGroupIDs": { "Fn::Join" : [",", [
                  {"Fn::GetAtt" : ["SGStack", "Outputs.BaseSG"]},
                  {"Fn::GetAtt" : ["SGStack", "Outputs.WebserverHttpSG"]}
               ]]},
               "InstanceTypeParameter": { "Ref": "InstanceTypeParameter"},
               "ImageID": { "Ref" : "WebserverImageID"}
            }
         }
      },
      "StagingAnsibleControllerStack": {
         "Type": "AWS::CloudFormation::Stack",
         "Properties": {
            "TemplateURL": "https://s3.amazonaws.com/alex-demo-files/cf-templates/ansible-hello-world/ansible_controllers.template",
            "TimeoutInMinutes": 5,
            "Parameters": {
               "AppName": { "Ref": "AppName" },
               "Environment": "staging",
               "SubnetIDs": { "Fn::GetAtt" : ["VPCStack", "Outputs.SubnetIds"] },
               "SecurityGroupIDs": { "Fn::GetAtt" : ["SGStack", "Outputs.BaseSG"] },
               "InstanceTypeParameter": { "Ref": "InstanceTypeParameter"},
               "ImageID": { "Ref" : "ControllerImageID"}
            }
         }
      },
      "StagingWebserverStack": {
         "Type": "AWS::CloudFormation::Stack",
         "Properties": {
            "TemplateURL": "https://s3.amazonaws.com/alex-demo-files/cf-templates/ansible-hello-world/webservers.template",
            "TimeoutInMinutes": 5,
            "Parameters": {
               "AppName": { "Ref": "AppName" },
               "Environment": "staging",
               "SubnetIDs": { "Fn::GetAtt" : ["VPCStack", "Outputs.SubnetIds"] },
               "SecurityGroupIDs": { "Fn::Join" : [",", [
                  {"Fn::GetAtt" : ["SGStack", "Outputs.BaseSG"]},
                  {"Fn::GetAtt" : ["SGStack", "Outputs.WebserverHttpSG"]}
               ]]},
               "InstanceTypeParameter": { "Ref": "InstanceTypeParameter"},
               "ImageID": { "Ref" : "WebserverImageID"}
            }
         }
      },
      "TestAnsibleControllerStack": {
         "Type": "AWS::CloudFormation::Stack",
         "Properties": {
            "TemplateURL": "https://s3.amazonaws.com/alex-demo-files/cf-templates/ansible-hello-world/ansible_controllers.template",
            "TimeoutInMinutes": 5,
            "Parameters": {
               "AppName": { "Ref": "AppName" },
               "Environment": "test",
               "SubnetIDs": { "Fn::GetAtt" : ["VPCStack", "Outputs.SubnetIds"] },
               "SecurityGroupIDs": { "Fn::GetAtt" : ["SGStack", "Outputs.BaseSG"] },
               "InstanceTypeParameter": { "Ref": "InstanceTypeParameter"},
               "ImageID": { "Ref" : "ControllerImageID"}
            }
         }
      },
      "TestWebserverStack": {
         "Type": "AWS::CloudFormation::Stack",
         "Properties": {
            "TemplateURL": "https://s3.amazonaws.com/alex-demo-files/cf-templates/ansible-hello-world/webservers.template",
            "TimeoutInMinutes": 5,
            "Parameters": {
               "AppName": { "Ref": "AppName" },
               "Environment": "test",
               "SubnetIDs": { "Fn::GetAtt" : ["VPCStack", "Outputs.SubnetIds"] },
               "SecurityGroupIDs": { "Fn::Join" : [",", [
                  {"Fn::GetAtt" : ["SGStack", "Outputs.BaseSG"]},
                  {"Fn::GetAtt" : ["SGStack", "Outputs.WebserverHttpSG"]}
               ]]},
               "InstanceTypeParameter": { "Ref": "InstanceTypeParameter"},
               "ImageID": { "Ref" : "WebserverImageID"}
            }
         }
      }
   },
   "Outputs" : {
      "VpcId" : {
         "Description" : "VPC ID",
         "Value": {
            "Fn::GetAtt" : ["VPCStack", "Outputs.VpcId"]
         }
      },
      "ProdAnsibleControllerPrivateIPs" : {
         "Description" : "Prod - Ansible Controller Private IPs",
         "Value": {
            "Fn::GetAtt" : ["ProdAnsibleControllerStack", "Outputs.PrivateIPs"]
         }
      },
      "ProdAnsibleControllerPublicIPs" : {
         "Description" : "Prod - Ansible Controller Public IPs",
         "Value": {
            "Fn::GetAtt" : ["ProdAnsibleControllerStack", "Outputs.PublicIPs"]
         }
      },
      "StagingAnsibleControllerPrivateIPs" : {
         "Description" : "Prod - Ansible Controller Private IPs",
         "Value": {
            "Fn::GetAtt" : ["StagingWebserverStack", "Outputs.PrivateIPs"]
         }
      },
      "StagingAnsibleControllerPublicIPs" : {
         "Description" : "Prod - Ansible Controller Public IPs",
         "Value": {
            "Fn::GetAtt" : ["StagingWebserverStack", "Outputs.PublicIPs"]
         }
      },
      "TestAnsibleControllerPrivateIPs" : {
         "Description" : "Prod - Ansible Controller Private IPs",
         "Value": {
            "Fn::GetAtt" : ["TestWebserverStack", "Outputs.PrivateIPs"]
         }
      },
      "TestAnsibleControllerPublicIPs" : {
         "Description" : "Prod - Ansible Controller Public IPs",
         "Value": {
            "Fn::GetAtt" : ["TestWebserverStack", "Outputs.PublicIPs"]
         }
      }
   }
}
