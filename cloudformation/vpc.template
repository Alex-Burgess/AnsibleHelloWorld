{
   "AWSTemplateFormatVersion" : "2010-09-09",
   "Description": "Creates a VPC with public subnet.",
   "Parameters": {
      "AppName" : {
          "Type" : "String",
          "Description" : "Enter the name for the application",
          "MinLength": 1,
          "MaxLength": 64,
          "AllowedPattern": "[a-zA-Z][a-zA-Z0-9-]*",
          "ConstraintDescription": "AppName must begin with a letter and contain alphanumeric characters, or a hyphen."
      },
      "VpcCidrBlock": {
         "Type": "String",
         "AllowedPattern": "((\\d{1,3})\\.){3}\\d{1,3}/\\d{1,2}",
         "Default": "10.0.0.0/16",
         "Description": "VPC CIDR Block (eg 10.0.0.0/16)"
      }
   },
   "Resources" : {
      "VPC" : {
         "Type" : "AWS::EC2::VPC",
         "Properties" : {
            "CidrBlock" : {"Ref" : "VpcCidrBlock"},
            "EnableDnsSupport" : true,
            "EnableDnsHostnames" : true,
            "InstanceTenancy" : "default",
            "Tags" : [
               { "Key" : "Name", "Value" : { "Fn::Sub": [ "${app}", { "app": {"Ref" : "AppName" }} ] } }
            ]
         }
      },
      "PublicSubnet1" : {
         "Type" : "AWS::EC2::Subnet",
         "Properties" : {
            "VpcId" : { "Ref" : "VPC" },
            "CidrBlock": { "Fn::Select" : [ 0, { "Fn::Cidr": [ { "Ref" : "VpcCidrBlock" }, 256, 8 ] } ] },
            "AvailabilityZone": { "Fn::Select" : [ "0", { "Fn::GetAZs" : "" } ] },
            "MapPublicIpOnLaunch": true,
            "Tags" : [
               { "Key" : "Name", "Value" : { "Fn::Sub": [ "${app}", { "app": {"Ref" : "AppName" }} ] } }
            ]
         }
      },
      "PublicSubnet2" : {
         "Type" : "AWS::EC2::Subnet",
         "Properties" : {
            "VpcId" : { "Ref" : "VPC" },
            "CidrBlock": { "Fn::Select": [ 1, { "Fn::Cidr": [ { "Ref" : "VpcCidrBlock" }, 256, 8 ] } ] },
            "AvailabilityZone": { "Fn::Select" : [ "1", { "Fn::GetAZs" : "" } ] },
            "MapPublicIpOnLaunch": true,
            "Tags" : [
               { "Key" : "Name", "Value" : { "Fn::Sub": [ "${app}", { "app": {"Ref" : "AppName" }} ] } }
            ]
         }
      },
      "IGW" : {
        "Type" : "AWS::EC2::InternetGateway",
          "Properties" : {
            "Tags" : [
               { "Key" : "Name", "Value" : { "Fn::Sub": [ "${app}-IGW", { "app": {"Ref" : "AppName" }} ] } }
            ]
          }
      },
      "AttachGateway" : {
        "Type" : "AWS::EC2::VPCGatewayAttachment",
        "Properties" : {
          "VpcId" : { "Ref" : "VPC" },
          "InternetGatewayId" : { "Ref" : "IGW" }
        }
      },
      "PublicRouteTable" : {
        "Type" : "AWS::EC2::RouteTable",
        "Properties" : {
          "VpcId" : {"Ref" : "VPC"},
          "Tags" : [
             { "Key" : "Name", "Value" : { "Fn::Sub": [ "${app}-PublicRouteTable", { "app": {"Ref" : "AppName" }} ] } }
          ]
        }
      },
      "IGWRoute" : {
        "Type" : "AWS::EC2::Route",
        "DependsOn" : "AttachGateway",
        "Properties" : {
          "RouteTableId" : { "Ref" : "PublicRouteTable" },
          "DestinationCidrBlock" : "0.0.0.0/0",
          "GatewayId" : { "Ref" : "IGW" }
        }
      },
      "SubnetRouteTableAssociation" : {
        "Type" : "AWS::EC2::SubnetRouteTableAssociation",
        "Properties" : {
          "SubnetId" : { "Ref" : "PublicSubnet1" },
          "RouteTableId" : { "Ref" : "PublicRouteTable" }
        }
      },
      "SubnetRouteTableAssociation2" : {
           "Type" : "AWS::EC2::SubnetRouteTableAssociation",
           "Properties" : {
             "SubnetId" : { "Ref" : "PublicSubnet2" },
             "RouteTableId" : { "Ref" : "PublicRouteTable" }
           }
      }
   },
   "Outputs" : {
      "VpcId" : {
         "Description" : "VPC ID",
         "Value" : { "Ref" : "VPC" }
      },
      "SubnetIds": {
         "Description": "SubnetIds",
         "Value": {
              "Fn::Join" : [ ",", [ { "Ref" : "PublicSubnet1" }, { "Ref" : "PublicSubnet2" } ] ]
         }
      }
   }
}
