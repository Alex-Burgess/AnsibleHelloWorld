{
   "AWSTemplateFormatVersion": "2010-09-09",
   "Description": "Creates Ansible Controller Instances",
   "Resources": {
      "AnsibleInstance": {
         "Type": "AWS::EC2::Instance",
         "Metadata" : {
            "Comment1" : "Configure the bootstrap helpers to install pip and ansible",

            "AWS::CloudFormation::Init" : {
               "configSets" : {
                  "Install" : [ "BasePackages", "AnsibleSetup", "AppDirs", "TagTool" ]
               },
               "BasePackages" : {
                  "packages" : {
                     "yum" : {
                        "python2-pip" : []
                     }
                  },
                  "commands" : {
                     "update_yum_packages" : {
                        "command" : "yum update -y"
                     }
                  }
               },
               "AnsibleSetup" : {
                  "commands" : {
                     "1_create_ansible_user" : {
                        "command" : "useradd -m ansible"
                     },
                     "2_add_ec2-user_to_ansible_group" : {
                        "command" : "usermod -a -G ansible ec2-user"
                     },
                     "3_install_ansible_with_user" : {
                        "command" : "su ansible -c 'pip install ansible --user --no-cache-dir'"
                     }
                  }
               },
               "AppDirs" : {
                  "commands" : {
                     "1_create_slash_app" : {
                        "command" : "mkdir /app -m 755"
                     },
                     "2_create_ansible_directory" : {
                        "command" : "mkdir /app/ansible -m 775"
                     },
                     "3_set_ownership_of_ansible_directory" : {
                        "command" : "chown ansible:ansible /app/ansible"
                     },
                     "4_create_applications_directory" : {
                        "command" : "mkdir /app/applications -m 775"
                     },
                     "5_set_ownership_of_applications_directory" : {
                        "command" : "chown ansible:ansible /app/applications"
                     },
                  }
               },
               "TagTool" : {
                  "files" : {
                     "/usr/local/bin/ec2_tags.sh" : {
                        "source": "https://raw.githubusercontent.com/Alex-Burgess/InterestingTools/master/ec2_tags.sh",
                        "mode": "000744",
                        "user": "root",
                        "group": "root"
                     }
                  },
                  "commands" : {
                     "1_create_tag_export_file" : {
                        "command" : "/usr/local/bin/ec2_tags.sh"
                     },
                  }
               }
            }
         },
         "Properties": {
            "KeyName": "AlexMain",
            "ImageId": "ami-0bdb1d6c15a40392c",
            "InstanceType": "t3.nano",
            "SubnetId": "subnet-2937dc4f",
            "SecurityGroupIds" : ["sg-2c660256"],
            "IamInstanceProfile" : "EC2-Describe-Tags-Instance-Profile",
            "Monitoring": false,
            "Tags": [
               { "Key" : "Name", "Value" : "AnsibleController" },
               { "Key" : "Application", "Value" : "AC-Test" },
               { "Key" : "Environment", "Value" : "Test" },
               { "Key" : "Type", "Value" : "AnsibleController" }
            ],
            "UserData": { "Fn::Base64" : { "Fn::Join" : ["", [
               "#!/bin/bash -xe\n",
               "yum install -y aws-cfn-bootstrap\n",

               "# Install the files and packages from the metadata\n",
               "/opt/aws/bin/cfn-init -v ",
               "         --stack ", { "Ref" : "AWS::StackName" },
               "         --resource AnsibleInstance ",
               "         --configsets Install ",
               "         --region ", { "Ref" : "AWS::Region" }, "\n",

               "# Signal the status from cfn-init\n",
               "/opt/aws/bin/cfn-signal -e $? ",
               "         --stack ", { "Ref" : "AWS::StackName" },
               "         --resource AnsibleInstance ",
               "         --region ", { "Ref" : "AWS::Region" }, "\n"
            ]]}}
         },
         "CreationPolicy" : {
            "ResourceSignal" : {
               "Timeout" : "PT5M"
            }
         }
      }
   },
   "Outputs" : {
      "PrivateIPs" : {
         "Description" : "Private IPs of ansible controller instances",
         "Value" : { "Fn::Join" : [ ",", [
            { "Fn::GetAtt" : ["AnsibleInstance", "PrivateIp"] }
         ] ] }
      },
      "PublicIPs" : {
         "Description" : "Public IPs of ansible controller instances",
         "Value" : { "Fn::Join" : [ ",", [
            { "Fn::GetAtt" : ["AnsibleInstance", "PublicIp"] }
         ] ] }
      }
   }
}
